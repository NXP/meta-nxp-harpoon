From c79b1fab3fed6004c7e211f31fe394af5cb4a423 Mon Sep 17 00:00:00 2001
From: Stephane Viau <stephane.viau@nxp.com>
Date: Mon, 26 Apr 2021 15:48:20 +0200
Subject: [PATCH 06/28] configs: arm64: imx8mp: add freertos basic and audio
 cells

The -rtos header can be reused for multiple RTOS (such as upcoming Zephyr)
cell configurations ;
the -freertos configuration file is used for the industrial-flavor of the
Harpoon project.

Signed-off-by: Stephane Viau <stephane.viau@nxp.com>
(add new cell for FreeRTOS audio case)
Signed-off-by: Jiafei Pan <Jiafei.Pan@nxp.com>
(rename configs: add harpoon prefix to names to avoid name conflicts)
Signed-off-by: Marouen Ghodhbane <marouen.ghodhbane@nxp.com>
---
 configs/arm64/imx8mp-harpoon-freertos-audio.c | 59 +++++++++++++++++++
 configs/arm64/imx8mp-harpoon-freertos.c       | 47 +++++++++++++++
 configs/arm64/imx8mp-harpoon-rtos.h           | 57 ++++++++++++++++++
 3 files changed, 163 insertions(+)
 create mode 100644 configs/arm64/imx8mp-harpoon-freertos-audio.c
 create mode 100644 configs/arm64/imx8mp-harpoon-freertos.c
 create mode 100644 configs/arm64/imx8mp-harpoon-rtos.h

diff --git a/configs/arm64/imx8mp-harpoon-freertos-audio.c b/configs/arm64/imx8mp-harpoon-freertos-audio.c
new file mode 100644
index 00000000..9d060d45
--- /dev/null
+++ b/configs/arm64/imx8mp-harpoon-freertos-audio.c
@@ -0,0 +1,59 @@
+/*
+ * i.MX8MP target - FreeRTOS audio config
+ *
+ * Copyright 2021-2022 NXP
+ *
+ * Authors:
+ *  Stephane Viau <stephane.viau@nxp.com>
+ *  Fabrice Goucem <fabrice.goucem@nxp.com>
+ *  Jiafei Pan <Jiafei.Pan@nxp.com>
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2.  See
+ * the COPYING file in the top-level directory.
+ */
+
+#include "cell-helper.h"
+#include "imx8mp-harpoon-rtos.h"
+
+/* Name, cores, entry point */
+#define CONFIG_INMATE_NAME		"freertos"
+#define CONFIG_INMATE_CORE_BITMAP	(0b1000)
+#define CONFIG_INMATE_BASE		(0xc0000000)
+
+/* Memory & peripherals */
+#define CONFIG_INMATE_REGIONS		\
+	RTOS_COMMON_MEMORY_REGIONS,                                     \
+	MEM_REGION_RWXL(0xc0000000, 0xc0000000, MB(16)),   /* RAM */    \
+	MEM_REGION_RWX( 0x00900000, 0x00900000, KB(384)),  /* OCRAM */  \
+	MEM_REGION_RW(  0x00800000, 0x00800000, KB(128)),  /* DTCM */   \
+	MEM_REGION_RWX( 0x007e0000, 0x007e0000, KB(128)),  /* ITCM */   \
+	MMIO_REGION_RW( 0x30240000, 0x30240000, KB(64)),   /* GPIO5 */	\
+	MMIO_REGION_RWS(0x30360000, 0x30360000, KB(4)),    /* ANA_PLL */\
+	MMIO_REGION_RWS(0x30384000, 0x30384000, KB(4)),    /* CCM */    \
+	MMIO_REGION_RWS(0x30388000, 0x30388000, KB(12)),   /* CCM */    \
+	MMIO_REGION_RW( 0x303a0000, 0x303a0000, KB(64)),   /* GPC */	\
+	MMIO_REGION_RWS(0x30a40000, 0x30a40000, KB(64)),   /* I2C3 */	\
+	MMIO_REGION_RWS(0x30c30000, 0x30c30000, KB(64)),   /* SAI3 */	\
+	MMIO_REGION_RWS(0x30c50000, 0x30c50000, KB(64)),   /* SAI5 */	\
+	MMIO_REGION_RWS(0x30e20000, 0x30e20000, KB(64))    /* AUDIOMIX */
+
+/* GIC */
+#define CONFIG_INMATE_IRQCHIPS_ADDR	(0x38800000)
+#define CONFIG_INMATE_IRQCHIPS \
+	IRQCHIP0(CONFIG_INMATE_IRQCHIPS_ADDR,              \
+		/* interrupts 32..63 */                    \
+		RTOS_COMMON_IRQCHIP0_BITMAP1,              \
+		/* interrupts 64..95 */                    \
+		RTOS_COMMON_IRQCHIPS_BITMAP2 |             \
+		IRQnMAP(I2S3_IRQn),  /* SAI3 */            \
+		/* interrupts 96..127 */                   \
+		RTOS_COMMON_IRQCHIPS_BITMAP3 |             \
+		IRQnMAP(I2S56_IRQn), /* SAI5 */            \
+		/* interrupts 128..159 */                  \
+		RTOS_COMMON_IRQCHIPS_BITMAP4)
+
+/* IVSHMEM PCI */
+#define CONFIG_INMATE_PCI_DEVICES \
+	RTOS_COMMON_PCI_IVSHMEM
+
+#include "cell-create.h"
diff --git a/configs/arm64/imx8mp-harpoon-freertos.c b/configs/arm64/imx8mp-harpoon-freertos.c
new file mode 100644
index 00000000..ea6a0ad3
--- /dev/null
+++ b/configs/arm64/imx8mp-harpoon-freertos.c
@@ -0,0 +1,47 @@
+/*
+ * i.MX8MP target - FreeRTOS
+ *
+ * Copyright 2021-2022 NXP
+ *
+ * Authors:
+ *  Stephane Viau <stephane.viau@nxp.com>
+ *  Fabrice Goucem <fabrice.goucem@nxp.com>
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2.  See
+ * the COPYING file in the top-level directory.
+ */
+
+#include "cell-helper.h"
+#include "imx8mp-harpoon-rtos.h"
+
+/* Name, cores, entry point */
+#define CONFIG_INMATE_NAME		"freertos"
+#define CONFIG_INMATE_CORE_BITMAP	(0b1000)
+#define CONFIG_INMATE_BASE		(0xc0000000)
+
+/* Memory & peripherals */
+#define CONFIG_INMATE_REGIONS		\
+	RTOS_COMMON_MEMORY_REGIONS,                                     \
+	MEM_REGION_RWXL(0xc0000000, 0xc0000000, MB(16)),   /* RAM */    \
+	MEM_REGION_RWX( 0x00900000, 0x00900000, KB(384)),  /* OCRAM */  \
+	MEM_REGION_RW(  0x00800000, 0x00800000, KB(128)),  /* DTCM */   \
+	MEM_REGION_RWX( 0x007e0000, 0x007e0000, KB(128))   /* ITCM */
+
+/* GIC */
+#define CONFIG_INMATE_IRQCHIPS_ADDR	(0x38800000)
+#define CONFIG_INMATE_IRQCHIPS \
+	IRQCHIP0(CONFIG_INMATE_IRQCHIPS_ADDR,              \
+		/* interrupts 32..63 */                    \
+		RTOS_COMMON_IRQCHIP0_BITMAP1,              \
+		/* interrupts 64..95 */                    \
+		RTOS_COMMON_IRQCHIPS_BITMAP2,              \
+		/* interrupts 96..127 */                   \
+		RTOS_COMMON_IRQCHIPS_BITMAP3,              \
+		/* interrupts 128..159 */                  \
+		RTOS_COMMON_IRQCHIPS_BITMAP4)
+
+/* IVSHMEM PCI */
+#define CONFIG_INMATE_PCI_DEVICES \
+	RTOS_COMMON_PCI_IVSHMEM
+
+#include "cell-create.h"
diff --git a/configs/arm64/imx8mp-harpoon-rtos.h b/configs/arm64/imx8mp-harpoon-rtos.h
new file mode 100644
index 00000000..ed343c5a
--- /dev/null
+++ b/configs/arm64/imx8mp-harpoon-rtos.h
@@ -0,0 +1,57 @@
+/*
+ * i.MX8MP target - common RTOS config
+ *
+ * Copyright 2021-2022 NXP
+ *
+ * Authors:
+ *  Stephane Viau <stephane.viau@nxp.com>
+ *  Fabrice Goucem <fabrice.goucem@nxp.com>
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2.  See
+ * the COPYING file in the top-level directory.
+ *
+ */
+
+typedef enum IRQn {
+
+  /* Device specific interrupts */
+  UART4_IRQn                   = 61,               /**< UART-4 ORed interrupt */
+  I2S3_IRQn                    = 82,               /**< SAI3 Receive / Transmit Interrupt */
+  GPT2_IRQn                    = 86,               /**< OR of GPT Rollover interrupt line, Input Capture 1 and 2 lines, Output Compare 1, 2, and 3 Interrupt lines */
+  GPT1_IRQn                    = 87,               /**< OR of GPT Rollover interrupt line, Input Capture 1 and 2 lines, Output Compare 1, 2, and 3 Interrupt lines */
+  I2S56_IRQn                   = 122,              /**< SAI5/6 Receive / Transmit Interrupt */
+} IRQn_Type;
+
+#define RTOS_COMMON_MEMORY_REGIONS \
+	MEM_REGION_ROS( 0xfd9f0000, 0xfd9f0000, KB(4)),  /* IVSHMEM */              \
+	MEM_REGION_RWS( 0xfd9f1000, 0xfd9f1000, KB(36)), /* IVSHMEM */              \
+	MEM_REGION_ROS( 0xfd9fa000, 0xfd9fa000, KB(8)),  /* IVSHMEM */              \
+	MEM_REGION_RWS( 0xfd9fc000, 0xfd9fc000, KB(8)),  /* IVSHMEM */              \
+	MEM_REGION_ROS( 0xfd9fe000, 0xfd9fe000, KB(8)),  /* IVSHMEM */              \
+	/* IVSHMEM regions should always be kept on top so PCI_IVS doesn't change */\
+	MMIO_REGION_RW( 0x302d0000, 0x302d0000, KB(64)), /* GPT1 */                 \
+	MMIO_REGION_RW( 0x302e0000, 0x302e0000, KB(64)), /* GPT2 */                 \
+	MMIO_REGION_RWS(0x30330000, 0x30330000, KB(64)), /* IOMUXC */               \
+	MMIO_REGION_ROS(0x30360000, 0x30360000, KB(64)), /* ANA_PLL */              \
+	MMIO_REGION_ROS(0x30380000, 0x30380000, KB(64)), /* CCM */                  \
+	MMIO_REGION_RW( 0x30a60000, 0x30a60000, KB(64))  /* UART4 */                \
+
+/* interrupts 32..63 */
+#define RTOS_COMMON_IRQCHIP0_BITMAP1 \
+	IRQnMAP(UART4_IRQn)
+
+/* interrupts 64..95 */
+#define RTOS_COMMON_IRQCHIPS_BITMAP2 \
+	IRQnMAP(GPT2_IRQn) | \
+	IRQnMAP(GPT1_IRQn)
+
+/* interrupts 96..127 */
+#define RTOS_COMMON_IRQCHIPS_BITMAP3 \
+	0
+
+/* interrupts 128..159 */
+#define RTOS_COMMON_IRQCHIPS_BITMAP4 \
+	0
+
+#define	RTOS_COMMON_PCI_IVSHMEM \
+	PCI_IVSHMEM_UNDEFINED(2, 0, 0, 1, 3)
-- 
2.34.1

