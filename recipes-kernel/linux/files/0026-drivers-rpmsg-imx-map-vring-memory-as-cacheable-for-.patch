From 5a0df84680fb6f97544975727711a0d809663ee3 Mon Sep 17 00:00:00 2001
From: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
Date: Wed, 13 Sep 2023 00:15:54 +0800
Subject: [PATCH 26/35] drivers: rpmsg: imx: map vring memory as cacheable for
 coherent device

On imx SoCs, it supports data coherent within the Cortex-A core
cluster, so leverage this feature mapping the vring memory as
cachable memory to improve the performance.

Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
---
 drivers/rpmsg/imx_rpmsg.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/drivers/rpmsg/imx_rpmsg.c b/drivers/rpmsg/imx_rpmsg.c
index a540c10074d7..eca71e76e2a9 100644
--- a/drivers/rpmsg/imx_rpmsg.c
+++ b/drivers/rpmsg/imx_rpmsg.c
@@ -15,6 +15,7 @@
 #include <linux/module.h>
 #include <linux/notifier.h>
 #include <linux/of_device.h>
+#include <linux/of_address.h>
 #include <linux/of_reserved_mem.h>
 #include <linux/platform_device.h>
 #include <linux/virtio_config.h>
@@ -163,8 +164,12 @@ static struct virtqueue *rp_find_vq(struct virtio_device *vdev,
 		return ERR_PTR(-ENOMEM);
 
 	/* ioremap'ing normal memory, so we cast away sparse's complaints */
-	rpvq->addr = (__force void *) ioremap(virdev->vring[index],
-							RPMSG_RING_SIZE);
+	if (of_dma_is_coherent(dev->of_node))
+		rpvq->addr = (__force void *)ioremap_cache(virdev->vring[index],
+							   RPMSG_RING_SIZE);
+	else
+		rpvq->addr = (__force void *)ioremap(virdev->vring[index],
+						     RPMSG_RING_SIZE);
 	if (!rpvq->addr) {
 		err = -ENOMEM;
 		goto free_rpvq;
-- 
2.34.1

