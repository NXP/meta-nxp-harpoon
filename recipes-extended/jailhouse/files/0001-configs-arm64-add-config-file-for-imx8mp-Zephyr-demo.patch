From 7053ef3fdeda45321829e0ba08d7237267a04aa3 Mon Sep 17 00:00:00 2001
From: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
Date: Mon, 19 Apr 2021 17:09:48 +0800
Subject: [PATCH 01/43] configs: arm64: add config file for imx8mp Zephyr demo

This config file assigns core2 and core3 to Zephyr cell,
and the UART4 is used as Zephyr console.

Signed-off-by: Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
---
 configs/arm64/imx8mp-zephyr.c | 80 +++++++++++++++++++++++++++++++++++
 1 file changed, 80 insertions(+)
 create mode 100644 configs/arm64/imx8mp-zephyr.c

diff --git a/configs/arm64/imx8mp-zephyr.c b/configs/arm64/imx8mp-zephyr.c
new file mode 100644
index 00000000..53e6ab6d
--- /dev/null
+++ b/configs/arm64/imx8mp-zephyr.c
@@ -0,0 +1,80 @@
+/*
+ * i.MX8MP target - zephyr-demo
+ *
+ * Copyright 2021 NXP
+ *
+ * Authors:
+ *  Hou Zhiqiang <Zhiqiang.Hou@nxp.com>
+ *
+ * This work is licensed under the terms of the GNU GPL, version 2.  See
+ * the COPYING file in the top-level directory.
+ */
+
+#include <jailhouse/types.h>
+#include <jailhouse/cell-config.h>
+
+#define CONFIG_INMATE_BASE	0xc0000000
+
+struct {
+	struct jailhouse_cell_desc cell;
+	__u64 cpus[1];
+	struct jailhouse_memory mem_regions[4];
+	struct jailhouse_irqchip irqchips[1];
+} __attribute__((packed)) config = {
+	.cell = {
+		.signature = JAILHOUSE_CELL_DESC_SIGNATURE,
+		.revision = JAILHOUSE_CONFIG_REVISION,
+		.name = "zephyr-inmate-demo",
+		.flags = JAILHOUSE_CELL_PASSIVE_COMMREG,
+
+		.cpu_set_size = sizeof(config.cpus),
+		.num_memory_regions = ARRAY_SIZE(config.mem_regions),
+		.num_irqchips = ARRAY_SIZE(config.irqchips),
+		.num_pci_devices = 0,
+		.cpu_reset_address = CONFIG_INMATE_BASE,
+	},
+
+	.cpus = {
+		0xc,
+	},
+
+	.mem_regions = {
+		/* CCM */ {
+			.phys_start = 0x30380000,
+			.virt_start = 0x30380000,
+			.size = 0x10000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_IO | JAILHOUSE_MEM_ROOTSHARED,
+		},
+		/* UART4 */ {
+			.phys_start = 0x30a60000,
+			.virt_start = 0x30a60000,
+			.size = 0x1000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_IO,
+		},
+		/* RAM: start from the bottom of inmate memory */ {
+			.phys_start = 0xc0000000,
+			.virt_start = 0xc0000000,
+			.size = 0x00100000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_EXECUTE | JAILHOUSE_MEM_LOADABLE,
+		},
+		/* communication region */ {
+			.virt_start = 0x80000000,
+			.size = 0x00001000,
+			.flags = JAILHOUSE_MEM_READ | JAILHOUSE_MEM_WRITE |
+				JAILHOUSE_MEM_COMM_REGION,
+		},
+	},
+
+	.irqchips = {
+		/* uart4 */ {
+			.address = 0x38800000,
+			.pin_base = 32,
+			.pin_bitmap = {
+				(1 << (29 + 32 - 32))
+			},
+		},
+	},
+};
-- 
2.25.1

